Index: src/Task1.java
===================================================================
--- src/Task1.java	(revision 0c89b89136793eda51c9da3444b2037711958b12)
+++ src/Task1.java	(revision 0c89b89136793eda51c9da3444b2037711958b12)
@@ -1,5 +0,0 @@
-public class Task1 {
-    public static void main(String[] args){
-        System.out.println((~15));
-    }
-}
Index: src/Task6.java
===================================================================
--- src/Task6.java	(revision 0c89b89136793eda51c9da3444b2037711958b12)
+++ src/Task6.java	(revision 0c89b89136793eda51c9da3444b2037711958b12)
@@ -1,5 +0,0 @@
-public class Task6 {
-    public static void main(String[] args){
-        System.out.println((~15));
-    }
-}
Index: .idea/.gitignore
===================================================================
--- .idea/.gitignore	(revision 0c89b89136793eda51c9da3444b2037711958b12)
+++ .idea/.gitignore	(revision 0c89b89136793eda51c9da3444b2037711958b12)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: src/Task5.java
===================================================================
--- src/Task5.java	(revision 0c89b89136793eda51c9da3444b2037711958b12)
+++ src/Task5.java	(revision 0c89b89136793eda51c9da3444b2037711958b12)
@@ -1,2 +0,0 @@
-
-}
Index: src/HomeWork2p2/Task2p3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/HomeWork2p2/Task2p3.java	(date 1602015221425)
+++ src/HomeWork2p2/Task2p3.java	(date 1602015221425)
@@ -0,0 +1,86 @@
+package HomeWork2p2;
+import java.util.Scanner;
+
+public class Task2p3 {
+    public static void main(String[] args) {
+        //doWhileReverse(); // цикл do...while для выведения введенного с клавиатуры массива в обратном порядке
+        //cycleForRev(); // цикл for для выведения введенного с клавиатуры массива в обратном порядке
+        //whileReverse(); // цикл while для выведения введенного с клавиатуры массива в обратном порядке
+        forEachReverse(); // "цикл - костыль" for-each
+    }
+
+
+    static void doWhileReverse() {
+        System.out.println("Введите размер массива");
+        Scanner scan = new Scanner(System.in);
+        int k = scan.nextInt();
+        int[] array = new int[k];
+        int i = 0;
+        System.out.println("Введите числа для записи в массив");
+        do {
+            array[i] = scan.nextInt();
+            i++;
+        } while (i < array.length);
+        do {
+            i--;
+            System.out.print(array[i] + " ");
+        } while (i > 0);
+
+    }
+
+    static void cycleForRev() {
+        System.out.println("Введите размер массива");
+        Scanner scan = new Scanner(System.in);
+        int k = scan.nextInt();
+        int[] array = new int[k];
+        System.out.println("Введите числа для записи в массив");
+        for (int i = 0; i < array.length; i++) {
+            array[i] = scan.nextInt();
+        }
+        scan.close();
+        for (int i = array.length - 1; i >= 0; i--) {
+            System.out.print(array[i] + " ");
+
+        }
+    }
+
+    static void whileReverse() {
+        System.out.println("Введите размер массива");
+        Scanner scan = new Scanner(System.in);
+        int k = scan.nextInt();
+        int[] array = new int[k];
+        System.out.println("Введите числа для записи в массив");
+        int i = 0;
+        while (i < array.length) {
+            array[i] = scan.nextInt();
+            i++;
+        }
+        scan.close();
+        while (i > 0) {
+            i--;
+            System.out.print(array[i] + " ");
+
+
+        }
+    }
+
+    static void forEachReverse() {
+        System.out.println("Введите размер массива");
+        Scanner scan = new Scanner(System.in);
+        int k = scan.nextInt();
+        int[] array = new int[k];
+        System.out.println("Введите числа для записи в массив");
+        int pos = 0;
+        for (int i : array) {
+            array[pos] = scan.nextInt();
+            pos++;
+        }
+        scan.close();
+        for (int i : array) {
+            pos--;
+            System.out.print(array[pos] + " "); // в for-each невозможно вывести reverse-массив без использования костылей
+
+        }
+    }
+}
+
Index: src/HomeWork2p2/Task4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/HomeWork2p2/Task4.java	(date 1602015390610)
+++ src/HomeWork2p2/Task4.java	(date 1602015390610)
@@ -0,0 +1,202 @@
+package HomeWork2p2;
+import java.util.Scanner;
+
+public class Task4 {
+    public static void main(String[] args) {
+        Sort sort = new Sort();
+        boolean exit  = false;
+        while(exit == false){ //цикл для красоты и удобства
+            System.out.println(" 1. Задание 4.2. Сортировка-пузырек \n 2. Задание 4.2. Шейкерная сортировка \n 3. Задание 4.4. Сортировка-пузырек \n 4. Задание 4.4. Шейкерная сортировка \n 5. Задание 4.5. Сортировка - пузырек \n 6. Задание 4.6. Шейкерная сортировка \n 7. Выход");
+            System.out.println("Выберите пункт"); // идет активное взаимодействие с растерянным тестировщиком
+            Scanner scan = new Scanner(System.in);
+            int choice = scan.nextInt();
+            switch(choice){
+                case 1:
+                    sort.testShowBubble();
+                    break;
+                case 2:
+                    sort.testShowShake();;
+                    break;
+                case 3:
+                    sort.randomArrayBubbleShow();
+                    break;
+                case 4:
+                    sort.randomArrayShakeShow();
+                    break;
+                case 5:
+                    sort.customArrayBubbleShow();
+                    break;
+                case 6:
+                    sort.customArrayShakeShow();
+                    break;
+                case 7:
+                    exit = true;
+                    break;
+            }
+
+        /* System.out.println("Задание 4.2.1. Сортировка-пузырек ");
+       sort.testShowBubble();
+        System.out.println("Задание 4.2.2. Сортировка-шейкерная");
+        sort.testShowShake();*/
+            // sort.randomArrayBubbleShow();
+            // sort.randomArrayShakeShow();
+            // sort. customArrayBubbleShow();
+            // sort.customArrayShakeShow();
+
+
+        }
+    }
+}
+class Sort{ //класс, отвечающий за методы с сортировкой массивов
+    public static void testShowBubble(){
+        int [] array1 = {1,2,3,4,5,6};
+        int [] array2 = {1,1,1,1};
+        int [] array3 = {9,1,5,99,9,9};
+        int [] array4 = {};
+        System.out.println("Массив 1:");
+        System.out.println("Массив до:");
+        show(array1);
+        System.out.println("Массив после:");
+        show(sortBubble(array1));
+        System.out.println("Массив 2:");
+        System.out.println("Массив до:");
+        show(array2);
+        System.out.println("Массив после:");
+        show(sortBubble(array2));
+        System.out.println("Массив 3:");
+        System.out.println("Массив до:");
+        show(array3);
+        System.out.println("Массив после:");
+        show(sortBubble(array3));
+        System.out.println("Массив 4:");
+        System.out.println("Массив до:");
+        show(array4);
+        System.out.println("Массив после:");
+        show(sortBubble(array4));
+    }
+    public static void testShowShake(){
+        int [] array1 = {1,2,3,4,5,6};
+        int [] array2 = {1,1,1,1};
+        int [] array3 = {9,1,5,99,9,9};
+        int [] array4 = {};
+        System.out.println("Массив 1:");
+        System.out.println("Массив до:");
+        show(array1);
+        System.out.println("Массив после:");
+        show(sortShake(array1));
+        System.out.println("Массив 2:");
+        System.out.println("Массив до:");
+        show(array2);
+        System.out.println("Массив после:");
+        show(sortShake(array2));
+        System.out.println("Массив 3:");
+        System.out.println("Массив до:");
+        show(array3);
+        System.out.println("Массив после:");
+        show(sortShake(array3));
+        System.out.println("Массив 4:");
+        System.out.println("Массив до:");
+        show(array4);
+        System.out.println("Массив после:");
+        show(sortShake(array4));
+    }
+    public static void randomArrayBubbleShow(){
+         int[] array = randomArray();
+        System.out.println("Массив до:");
+        show(array);
+        System.out.println("Массив после:");
+        show(sortBubble(array));
+
+    }
+    public static void randomArrayShakeShow(){
+        int[] array = randomArray();
+        System.out.println("Массив до:");
+        show(array);
+        System.out.println("Массив после:");
+        show(sortShake(array));
+    }
+    public  static void show(int[] array){
+        for(int i = 0; i < array.length; i++) {
+            System.out.print(array[i] + " ");
+
+        }
+        System.out.println();
+    }
+    public static void customArrayBubbleShow(){
+        int[] array = ScanShow();
+
+        System.out.println("Массив до:");
+        show(array);
+        System.out.println("Массив после:");
+        show(sortBubble(array));
+    }
+    public static void customArrayShakeShow(){
+        int[] array = ScanShow();
+
+        System.out.println("Массив до:");
+        show(array);
+        System.out.println("Массив после:");
+        show(sortShake(array));
+    }
+    public static int[] sortBubble(int[] array){
+        for(int i = array.length - 1; i > 0; i--){
+            for(int j = 0; j < i; j++){
+                if(array[j] > array[j+1]){
+                    int buf = array[j];
+                    array[j] = array[j+1];
+                    array[j+1] = buf;
+                }
+            }
+        }
+        return array;
+    }
+
+    public static int[] sortShake(int[] array){
+        int left = 0;
+        int right = array.length - 1;
+        do {
+            for(int i = left; i < right; i++){
+                if(array[i] > array[i + 1]){
+                    int buf = array[i];
+                    array[i] = array[i + 1];
+                    array[i + 1] = buf;
+                }
+            }
+            right--;
+            for (int i = right; i > left; i--){
+                if(array[i] < array[i-1]){
+                    int buf = array[i];
+                    array[i] = array[i - 1];
+                    array[i - 1] = buf;
+                }
+            }
+            left++;
+
+        }while(left <= right);
+        return array;
+    }
+    public static int[] randomArray(){
+     int _length = 0;
+     _length = 0 + (int) (Math.random()* 10);
+    int[] array = new int[_length];
+    for(int i = 0; i < array.length; i++){
+        array[i] = - 100 + (int) (201 * Math.random());
+    }
+        return array;
+    }
+    public static int[] ScanShow(){
+        int length_ = 0;
+        Scanner scan = new Scanner(System.in);
+        do {
+            System.out.println("Введите длину массива");
+             length_ = scan.nextInt();
+        }while(length_ <= 0);
+        int[] array = new int[length_];
+        for(int i = 0 ; i < array.length; i++){
+            System.out.println("Введите [" +  i + "] элемент массива");
+            array[i] = scan.nextInt();
+        }
+        scan.close();
+        return array;
+    }
+}
Index: src/HomeWork2p2/Task2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/HomeWork2p2/Task2.java	(date 1602015221448)
+++ src/HomeWork2p2/Task2.java	(date 1602015221448)
@@ -0,0 +1,103 @@
+package HomeWork2p2;
+import java.util.Scanner;
+
+public class Task2 {
+    public static void main(String[] args) {
+        doWhile(); // цикл do...while
+        //cycleFor(); // цикл for
+        //whiLe(); // цикл while
+        //forEach(); // "цикл - костыль" for-each (получает копии элементов массива и не знает, как дальше работать без дополнительных манипуляций)
+        //cycleForEvenOnly(); // цикл для четных чисел
+
+    }
+
+    static void doWhile() {
+        System.out.println("Введите размер массива");
+        Scanner scan = new Scanner(System.in);
+        int k = scan.nextInt();
+        int[] array = new int[k];
+        int i = 0;
+        System.out.println("Введите числа для записи в массив");
+        do {
+            array[i] = scan.nextInt();
+            i++;
+        } while (i < array.length);
+        i = 0;
+        scan.close();
+        do {
+            System.out.print(array[i] + " ");
+            i++;
+        } while (i < array.length);
+
+    }
+
+    static void cycleFor() {
+        System.out.println("Введите размер массива");
+        Scanner scan = new Scanner(System.in);
+        int k = scan.nextInt();
+        int[] array = new int[k];
+        System.out.println("Введите числа для записи в массив");
+        for (int i = 0; i < array.length; i++) {
+            array[i] = scan.nextInt();
+        }
+        scan.close();
+        for (int i = 0; i < array.length; i++) {
+            System.out.print(array[i] + " ");
+        }
+    }
+
+    static void whiLe() {
+        System.out.println("Введите размер массива");
+        Scanner scan = new Scanner(System.in);
+        int k = scan.nextInt();
+        int[] array = new int[k];
+        System.out.println("Введите числа для записи в массив");
+        int i = 0;
+        while (i < array.length) {
+            array[i] = scan.nextInt();
+            i++;
+        }
+        scan.close();
+        i = 0;
+        while (i < array.length) {
+            System.out.print(array[i] + " ");
+            i++;
+
+        }
+    }
+
+    static void forEach() {
+        System.out.println("Введите размер массива");
+        Scanner scan = new Scanner(System.in);
+        int k = scan.nextInt();
+        int[] array = new int[k];
+        System.out.println("Введите числа для записи в массив");
+        int pos = 0;
+        for (int i : array) { //другой ввод через for-each невозможен, потому что int i является копией элемента массива и мы не можем изменять array[i] напрямую через цикл for-each
+            array[pos] = scan.nextInt();
+            pos++;
+        }
+        scan.close();
+       for (int i : array) {
+            System.out.print(i + " ");
+
+        }
+    }
+
+    static void cycleForEvenOnly() {
+        System.out.println("Введите размер массива");
+        Scanner scan = new Scanner(System.in);
+        int k = scan.nextInt();
+        int[] array = new int[k];
+        System.out.println("Введите числа для записи в массив");
+        for (int i = 0; i < array.length; i++) {
+            array[i] = scan.nextInt();
+        }
+        scan.close();
+        for (int i = 0; i < array.length; i = i + 2) {
+                System.out.print(array[i] + " ");
+            }
+        }
+
+}
+
Index: src/HomeWork2p2/Task1p3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/HomeWork2p2/Task1p3.java	(date 1601927867688)
+++ src/HomeWork2p2/Task1p3.java	(date 1601927867688)
@@ -0,0 +1,25 @@
+package HomeWork2p2;
+import java.util.Scanner;
+
+public class Task1p3 {
+    public static void main(String[] args) {
+       power();
+    }
+
+    static void power() {
+        System.out.println("Введите два числа");
+        Scanner sc = new Scanner(System.in);
+        int x = sc.nextInt();
+        int z = x; // записываем изначальное значение переменной x в новую переменную с постоянным для данного метода значением во избежание ошибки в вычислениях
+        int y = sc.nextInt();
+        if (y > 0) {
+            for (int i = 1; i < y; i++) {
+            z = z * x;
+            }
+            System.out.println(z);
+        }else{
+            System.out.println("Вводить отрицательные и дробные числа нельзя");
+        }
+
+    }
+}
\ No newline at end of file
Index: src/HomeWork2p2/Task1p2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/HomeWork2p2/Task1p2.java	(date 1601999871766)
+++ src/HomeWork2p2/Task1p2.java	(date 1601999871766)
@@ -0,0 +1,24 @@
+package HomeWork2p2;
+import java.util.Scanner;
+
+public class Task1p2 {
+    public static void main(String[] args){
+        System.out.println("Введите число");
+        Scanner scan = new Scanner(System.in);
+        int numbers = scan.nextInt();
+        scan.close();
+        int length_ = String.valueOf(numbers).length();
+        System.out.println(length_);
+        int answer = 1;
+        for (int i  = 0; i < length_; i++){
+            int number = numbers % 10;
+            System.out.print(" " + number + " * ");
+            answer = answer * number;
+            numbers = numbers - number;
+            numbers = numbers / 10;
+        }
+        System.out.print(" = " + answer);
+
+    }
+}
+
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectModuleManager\">\r\n    <modules>\r\n      <module fileurl=\"file://$PROJECT_DIR$/JavaProjects.iml\" filepath=\"$PROJECT_DIR$/JavaProjects.iml\" />\r\n    </modules>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision 0c89b89136793eda51c9da3444b2037711958b12)
+++ .idea/modules.xml	(date 1601644095459)
@@ -2,7 +2,9 @@
 <project version="4">
   <component name="ProjectModuleManager">
     <modules>
-      <module fileurl="file://$PROJECT_DIR$/JavaProjects.iml" filepath="$PROJECT_DIR$/JavaProjects.iml" />
+      <module fileurl="file://$PROJECT_DIR$/HomeWork2.iml" filepath="$PROJECT_DIR$/HomeWork2.iml" />
+      <module fileurl="file://$PROJECT_DIR$/HomeWorkk2.iml" filepath="$PROJECT_DIR$/HomeWorkk2.iml" />
+      <module fileurl="file://$PROJECT_DIR$/sept30.iml" filepath="$PROJECT_DIR$/sept30.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
Index: .idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>HomeWorkkk
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.name	(revision 0c89b89136793eda51c9da3444b2037711958b12)
+++ .idea/.name	(date 1601485311004)
@@ -1,1 +1,1 @@
-HomeWorkkk
\ No newline at end of file
+sept30
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/uiDesigner.xml	(date 1601925568414)
+++ .idea/uiDesigner.xml	(date 1601925568414)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: HomeWork2.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- HomeWork2.iml	(date 1601644095395)
+++ HomeWork2.iml	(date 1601644095395)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="KotlinJavaRuntime (2)" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: src/HomeWork2p2/Task1p1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/HomeWork2p2/Task1p1.java	(date 1601998947527)
+++ src/HomeWork2p2/Task1p1.java	(date 1601998947527)
@@ -0,0 +1,19 @@
+package HomeWork2p2;
+import java.util.Scanner;
+
+public class Task1p1 {
+    public static void main(String[] args){
+        System.out.println("Введите число");
+        Scanner scan = new Scanner(System.in);
+        int number = scan.nextInt();
+        scan.close();
+        int sum = 1;
+        for(int i = 1; i <= number; i++){
+            sum = sum * i;
+        }
+        System.out.println(sum);
+
+
+    }
+
+}
Index: .idea/libraries/KotlinJavaRuntime__2_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/KotlinJavaRuntime__2_.xml	(date 1601644095498)
+++ .idea/libraries/KotlinJavaRuntime__2_.xml	(date 1601644095498)
@@ -0,0 +1,19 @@
+<component name="libraryTable">
+  <library name="KotlinJavaRuntime (2)">
+    <CLASSES>
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-stdlib.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-reflect.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-test.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-stdlib-jdk7.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-stdlib-jdk8.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-stdlib-sources.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-reflect-sources.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-test-sources.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-stdlib-jdk7-sources.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-stdlib-jdk8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: HomeWorkk2.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- HomeWorkk2.iml	(date 1601644095424)
+++ HomeWorkk2.iml	(date 1601644095424)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="KotlinJavaRuntime (3)" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/libraries/KotlinJavaRuntime__3_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/KotlinJavaRuntime__3_.xml	(date 1601644095514)
+++ .idea/libraries/KotlinJavaRuntime__3_.xml	(date 1601644095514)
@@ -0,0 +1,19 @@
+<component name="libraryTable">
+  <library name="KotlinJavaRuntime (3)">
+    <CLASSES>
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-stdlib.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-reflect.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-test.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-stdlib-jdk7.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-stdlib-jdk8.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-stdlib-sources.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-reflect-sources.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-test-sources.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-stdlib-jdk7-sources.jar!/" />
+      <root url="jar://$KOTLIN_BUNDLED$/lib/kotlin-stdlib-jdk8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/HomeWork2p2/Task1p5v2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/HomeWork2p2/Task1p5v2.java	(date 1602006104747)
+++ src/HomeWork2p2/Task1p5v2.java	(date 1602006104747)
@@ -0,0 +1,28 @@
+package HomeWork2p2;
+
+public class Task1p5v2 {
+    public static void main(String[] args){
+            for(int i = 1; i < 10; i++){
+                for(int j = 2; j < 6; j++){
+                    if (i*j < 10){
+                        System.out.print(j + "*" + i + "= " + i*j + "|");
+                    }else {
+                        System.out.print(j + "*" + i + "=" + i * j + "|");
+                    }
+                }
+                System.out.println("");
+            }
+        System.out.println("----------------------------");
+            for(int i = 1; i < 10; i++){
+                for(int j = 6; j < 10; j++){
+                    if (i*j < 10){
+                    System.out.print(j + "*" + i + "= " + i*j + "|");
+                    }else {
+                    System.out.print(j + "*" + i + "=" + i * j + "|");
+                }
+            }
+            System.out.println("");
+        }
+        }
+
+}
Index: src/HomeWork2p2/Task1p4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/HomeWork2p2/Task1p4.java	(date 1601925567941)
+++ src/HomeWork2p2/Task1p4.java	(date 1601925567941)
@@ -0,0 +1,16 @@
+package HomeWork2p2;
+
+public class Task1p4 {
+    public static void main(String[] args){
+        long a = 1;
+        while (1 == 1){
+            long b = a;
+            a = a * 3;
+            if (a < 0){
+                System.out.println(b);
+                System.out.println(a);
+                break;
+            }
+    }
+}
+}
\ No newline at end of file
Index: src/HomeWork2p2/Task1p5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/HomeWork2p2/Task1p5.java	(date 1602005098449)
+++ src/HomeWork2p2/Task1p5.java	(date 1602005098449)
@@ -0,0 +1,13 @@
+package HomeWork2p2;
+
+public class Task1p5 {
+    public static void main(String[] args){
+        for(int i = 2; i < 10; i++){
+            for(int j = 1; j < 10; j++){
+                System.out.println(i + "*" + j + "=" + i*j);
+            }
+            System.out.println("------------");
+        }
+    }
+}
+
